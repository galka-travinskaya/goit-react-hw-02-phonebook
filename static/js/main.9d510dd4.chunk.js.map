{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","validateForm","reset","onCheckUniqe","alert","className","s","form","this","label","text","type","onChange","nubmer","form__btn","Component","ContactList","contacts","onRemove","length","list","map","id","items","delete_btn","onClick","Filter","filter","filter__input","App","initialContacts","formSubmitHandler","contact","uuid","console","log","prev","handleCheckUniqueContact","isExistContact","find","deleteContact","uniqId","prevState","changeFilter","visibleContacts","normalizedFilter","toLowerCase","includes","filteredContacts","container","onCheckUnique","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d510dd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ezv48\",\"label\":\"ContactForm_label__2GXxs\",\"text\":\"ContactForm_text__1-DCY\",\"form__btn\":\"ContactForm_form__btn__20qU1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__18lG7\",\"items\":\"ContactList_items__268PK\",\"text\":\"ContactList_text__2s3wl\",\"delete_btn\":\"ContactList_delete_btn__2bItG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3QFeb\",\"filter__input\":\"Filter_filter__input__feQAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__oF2Wl\"};","import {Component} from 'react';\r\nimport s from './ContactForm.module.css'\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {name, value} = e.currentTarget;\r\n        // const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.name, this.state.number);\r\n        const isValidForm = this.validateForm();\r\n        if(!isValidForm) return;\r\n        this.reset();\r\n    }\r\n    // говорит, что onCheckUniqe не ф-ция, не могу найти причину\r\n    validateForm = () => {\r\n        const {name, number} = this.state;\r\n        const {onCheckUniqe} = this.props;\r\n        if(!name || ! number) {\r\n            alert('Some field is empty')\r\n            return false\r\n        }\r\n        return onCheckUniqe(name);\r\n    }\r\n\r\n    // не очищает номер\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form className={s.form} onSubmit={this.handleSubmit}>\r\n                <h1>Phonebook</h1>\r\n                <label className={s.label}> \r\n                    <span className={s.text}>Name</span>\r\n                    <input \r\n                        type='text' \r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                    \r\n                <label className={s.label}> \r\n                    <span className={s.text}>Number</span>\r\n                    <input \r\n                        type='tel' \r\n                        name=\"number\"\r\n                        value={this.state.nubmer}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <button className={s.form__btn} type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n    \r\n}    \r\n\r\nexport default ContactForm;","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport s from './ContactList.module.css'\r\n\r\n\r\nconst ContactList = ({contacts, onRemove}) => {\r\n    if(contacts.length === 0) {\r\n        // return (\r\n            // как сделать так, чтоб не выводился 0?\r\n            alert('The list is empty')\r\n            return null;\r\n        // );\r\n    };\r\n    return (\r\n        <ul className={s.list}>\r\n        {contacts.map(({name, number, id}) => \r\n            <li className={s.items} key={id}>\r\n                <p className={s.text}>{name}: {number}</p>\r\n                <button \r\n                    className={s.delete_btn}\r\n                    type=\"button\"\r\n                    onClick={() => onRemove(id)}>\r\n                        Delete\r\n                </button>\r\n            </li>\r\n        )}\r\n    </ul>\r\n    )\r\n}\r\n    \r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        }),\r\n    ),\r\n    onRemove: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;\r\n","import React from 'react'\r\nimport s from './Filter.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Filter = ({value, onChange}) => {\r\n    return (\r\n        <label className={s.filter}>\r\n          <span>Find contacts by name</span> \r\n          <input className={s.filter__input} type=\"text\" value={value} onChange={onChange}/>\r\n        </label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\n\nimport ContactForm from './components/ContactForm'\nimport ContactList from './components/ContactList'\nimport Filter from './components/Filter'\nimport initialContacts from './data/contacts.json'\n\nimport s from './App.module.css';\nimport { v4 as uuid } from 'uuid';\n\n\n\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  formSubmitHandler = (name, number) => {\n    const contact = {\n      id: uuid(),\n      name,\n      number,\n    }\n    console.log(contact);\n    this.setState(prev => {\n      return {\n        contacts: [...prev.contacts, contact]\n      }\n    })\n  }\n  // не реагирует\n  handleCheckUniqueContact = (name) => {\n    const {contact} = this.state;\n    const isExistContact = !!contact.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist');\n    console.log(alert);\n    return !isExistContact;\n  }\n  \n  deleteContact = (uniqId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== uniqId)\n    }))\n  }\n\n  changeFilter = (e) => {\n    this.setState({filter: e.currentTarget.value})\n  }\n\n  visibleContacts = () => {\n    const {contacts, filter} = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  render() {\n    const {filter} = this.state;\n    const filteredContacts = this.visibleContacts();\n      return (\n          <div className={s.container}>\n              <ContactForm \n                onSubmit={this.formSubmitHandler}\n                onCheckUnique={this.handleCheckUniqueContact}/>\n\n              <h2>Contacts</h2>\n              <Filter \n                value={filter} \n                onChange={this.changeFilter}/>\n              <ContactList \n                contacts={filteredContacts} \n                onRemove={this.deleteContact}/>\n          </div>\n      );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}